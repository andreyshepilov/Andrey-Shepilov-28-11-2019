{"version":3,"sources":["helpers/utils.js","store/migrations.js","store/weather/actions.js","store/weather/enums.js","store/weather/reducer.js","store/locations/actions.js","store/locations/reducer.js","store/config/actions.js","store/config/enums.js","store/config/reducer.js","store/rootReducer.js","api/api.js","api/index.js","constants/defaultLocationData.js","store/weather/sagas.js","store/locations/sagas.js","store/rootSaga.js","store/store.js","theme/index.js","theme/custom.js","componentsCommon/history/index.js","constants/routes.js","componentsCommon/Header/NavMain/NavMain.jsx","componentsCommon/Header/SystemSelector/SystemSelector.jsx","componentsCommon/Header/Header.styles.js","componentsCommon/Header/Header.jsx","layouts/CommonLayout/CommonLayout.styles.js","layouts/CommonLayout/CommonLayout.jsx","componentsCommon/PageErrorBoundary/PageErrorBoundary.jsx","componentsCommon/AutocompleteUnit/AutocompleteUnit.jsx","components/LocationAutocomplete/LocationAutocomplete.styles.js","components/LocationAutocomplete/LocationAutocomplete.jsx","componentsCommon/Spinner/Spinner.jsx","components/LocationInfo/LocationInfo.styles.js","components/LocationInfo/LocationInfo.jsx","componentsCommon/AnimatedContainer/AnimatedContainer.jsx","components/CurrentWeather/AdditionalWeatherDetails/AdditionalWeatherDetails.styles.js","components/CurrentWeather/AdditionalWeatherDetails/AdditionalWeatherDetails.jsx","components/ForecastedWeatherCard/ForecastedWeatherCard.styles.js","components/ForecastedWeatherCard/ForecastedWeatherCard.jsx","components/CurrentWeather/CurrentWeather.styles.js","components/CurrentWeather/CurrentWeather.jsx","pages/WeatherPage/WeatherPage.styles.js","pages/WeatherPage/WeatherPage.jsx","components/FavoriteLocationCard/FavoriteLocationCard.styles.js","components/FavoriteLocationCard/FavoriteLocationCard.jsx","components/FavoriteLocations/FavoriteLocations.styles.js","components/FavoriteLocations/FavoriteLocations.jsx","pages/FavoritesPage/FavoritesPage.styles.js","pages/FavoritesPage/FavoritesPage.jsx","RouterUnit/RouterUnit.jsx","layouts/TopLevelLayout/TopLevelLayout.jsx","App.js","serviceWorker.js","index.js"],"names":["handleRequestError","errors","handleNotification","status","get","ejectErrorMessage","msg","action","info","success","dismiss","error","toast","migrations","0","state","config","measurementSystemIsMetric","favoriteLocations","list","locationData","createActions","GET_FULL_SET","locationKey","GET_FAVS_SET","undefined","GET_DEFAULT_SET","GET_CURRENT","START","destination","SUCCESS","data","FAILURE","GET_FORECASTED","dataSequence","prefix","getFullSet","getFavsSet","getDefaultSet","getCurrent","getForecasted","CurrentWeatherDestinations","SELECTED","FAVORITE","weatherReducer","handleActions","actions","start","payload","current","isLoading","favorites","failure","forecasted","SUGGESTIONS_GET","query","SELECTED_LOCATION_SET","SELECTED_LOCATION_REMOVE","suggestionsGet","selectedLocationSet","selectedLocationRemove","locationsReducer","suggestions","isDefaultLocationSelected","selectedLocationKey","MEASUREMENT_SYSTEM_SET","measurementSystem","FAVORITE_LOCATION_SET","country","administrativeArea","city","FAVORITE_LOCATION_REMOVE","measurementSystemSet","favoriteLocationSet","favoriteLocationRemove","MeasurementSystem","METRIC","IMPERIAL","configReducer","updatedList","push","length","shift","index","indexOf","splice","combineReducers","weather","locations","api","domain","options","this","axios","create","baseURL","forEach","method","_createRequest","url","body","a","response","process","locationsCitiesGet","params","language","weatherCurrentGet","withFullDetails","weatherForecastGet","isMetricValues","defaultLocationData","TEL_AVIV","LOCATION_KEY","COUNTRY_NAME","CITY_NAME","ADMINISTRATIVE_AREA_NAME","getCurrentWeather","getForecastedWeather","getWeatherSetDefault","getWeatherSetFull","getWeatherSetFavorites","weatherSagas","put","weatherActions","call","forecastData","DailyForecasts","element","EpochDate","locationsActions","fork","select","favoriteLocationsList","all","map","el","takeLatest","getSuggestions","locationsSagas","locationsData","Key","rootSaga","rootPersistConfig","key","storage","whitelist","version","migrate","createMigrate","debug","persistedReducer","persistReducer","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","onError","console","log","store","createStore","applyMiddleware","persistor","persistStore","run","customTheme","createMuiTheme","palette","primary","light","main","dark","secondary","text","additional","purple","createBrowserHistory","ROUTES","REDIRECT_URL","WEATHER","FAVORITES","withRouter","location","navItems","path","icon","Cloud","Favorite","ButtonGroup","variant","aria-label","item","Button","startIcon","onClick","e","to","history","pathname","selected","color","SystemSelector","dispatch","useDispatch","isMetricSystem","useSelector","Switch","size","checked","onChange","configActions","useStyles","makeStyles","theme","root","flex","toolbar","padding","spacing","breakpoints","down","toolbarContentWrapper","width","topRow","display","flexDirection","justifyContent","alignItems","flexWrap","bottomRow","overflow","maxHeight","transition","marginTop","bottomRowActive","logoMain","marginRight","fontSize","controlsWrapper","navWrapper","Header","classes","useState","settingsIsOpened","setSettingsIsOpened","className","AppBar","position","Toolbar","IconButton","button","SettingsApplications","classNames","pageWrapper","minHeight","mainContentWrapper","height","CommonLayout","children","styles","heading","errorMessage","marginBottom","fontWeight","PageErrorBoundary","props","hasError","JSON","stringify","React","Component","withStyles","SelectContainer","inputChange","onKeyUp","AutocompleteUnit","onInputChange","onSelectOption","name","isDisabled","defaultValue","placeholder","classNamePrefix","isClearable","isSearchable","autocompleteUnitWrapper","autocompleteUnitWrapperWithError","autocompleteErrorMessage","LocationAutocomplete","suggestionsData","suggestionsDataSequence","setOptions","isValidationError","setIsValidationError","englishOnlyRegexp","useEffect","cityName","administrativeAreaName","countryName","value","label","rootWrapper","test","target","Spinner","isVisible","isSmall","locationInfoWrapper","favButton","LocationInfo","isFavoriteLocation","setIsFavoriteLocation","currentLocation","includes","FavoriteBorder","AnimatedContainer","show","render","setRender","style","animation","onAnimationEnd","sectionPaper","backgroundColor","sectionHeader","sectionMainWrapper","AdditionalWeatherDetails","currentWeatherData","renderSingleValuedParam","dataObj","partialSelector","additionalParameter","renderMultiValuedParam","metricValue","metricUnit","imperialValue","imperialUnit","Paper","Typography","component","Grid","container","xs","sm","date","weatherWrapper","textAlign","weatherConditionIconWrapper","weatherConditionDescription","temperatureWrapper","temperatureSection","temperatureseparator","margin","temperatureValue","temperatureUnit","ForecastedWeatherCard","id","forecastedItemData","formattedDate","moment","format","weatherIconDay","weatherTextDay","TempMinValue","TempMinUnit","TempMaxValue","TempMaxUnit","src","slice","alt","header","headerControls","mainWeatherConditions","order","temperaturePrefix","temperatureMain","textTransform","bottomSection","forecastList","listStyle","forecastListItem","minWidth","CurrentWeather","forecastedWeatherDataSequence","detailsIsOpened","setDetailsIsOpened","weatherText","weatherIcon","TempValueMetric","TempUnitMetric","TempValueImperial","TempUnitImperial","RealFeelTempValueMetric","RealFeelTempUnitMetric","RealFeelTempValueImperial","RealFeelTempUnitImperial","moreButton","ExpandLess","ExpandMore","WeatherPage","opacity","temperatureValueWrapper","overlay","top","right","bottom","left","overlayTopPart","cursor","overlayBottomPart","overlayLabel","overlayIcon","FavoriteLocationCard","currentLocationData","AddCircleOutline","favoriteLocationsListItem","FavoriteLocations","pageHeading","FavoritesPage","RootRouter","exact","from","TopLevelLayout","StylesProvider","CssBaseline","RouterUnit","App","loading","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1eb2eef0.chunk.js","sourcesContent":["import { get } from 'lodash';\nimport { toast } from 'react-toastify';\n\nexport function ejectErrorMessage(errors) {\n  const status = get(errors, 'response.status', 500);\n\n  return get(errors, 'response.data.message', `Erros code #${status}`);\n}\n\nexport function handleRequestError(errors) {\n  handleNotification(ejectErrorMessage(errors), 'error');\n}\n\nexport function handleNotification(msg, type = 'info') {\n  const map = {\n    info: 'info',\n    success: 'success',\n    dismiss: 'dismiss',\n    error: 'error',\n  };\n  const action = map[type];\n\n  if (!action) return;\n\n  return toast[action](msg);\n}\n","export const migrations = {\n  0: state => {\n    return {\n      ...state,\n      config: {\n        ...state.config,\n        measurementSystemIsMetric: true,\n        favoriteLocations: {\n          list: [],\n          locationData: {},\n        },\n      },\n    };\n  },\n};\n","import { createActions } from 'redux-actions';\n\nexport const {\n  getFullSet,\n  getFavsSet,\n  getDefaultSet,\n  getCurrent,\n  getForecasted,\n} = createActions(\n  {\n    GET_FULL_SET: ({ locationKey }) => ({ locationKey }),\n    GET_FAVS_SET: undefined,\n    GET_DEFAULT_SET: undefined,\n\n    GET_CURRENT: {\n      START: ({ locationKey, destination }) => ({ locationKey, destination }),\n      SUCCESS: ({ data, locationKey, destination }) => ({\n        data,\n        locationKey,\n        destination,\n      }),\n      FAILURE: ({ locationKey, destination }) => ({ locationKey, destination }),\n    },\n    GET_FORECASTED: {\n      START: ({ locationKey }) => ({ locationKey }),\n      SUCCESS: ({ data, dataSequence }) => ({ data, dataSequence }),\n      FAILURE: undefined,\n    },\n  },\n  { prefix: 'WEATHER' }\n);\n","export const CurrentWeatherDestinations = {\n  SELECTED: 'selected',\n  FAVORITE: 'favorite',\n};\n","import { handleActions } from 'redux-actions';\n\nimport * as actions from './actions';\nimport { CurrentWeatherDestinations } from './enums';\n\nconst initialState = {\n  current: {\n    isLoading: false,\n    data: {},\n  },\n  forecasted: {\n    isLoading: false,\n    data: {},\n    dataSequence: [],\n  },\n  favorites: {},\n};\n\nexport const weatherReducer = handleActions(\n  {\n    [actions.getCurrent.start]: (state, action) => {\n      const { destination, locationKey } = action.payload;\n\n      if (destination === CurrentWeatherDestinations.SELECTED) {\n        return {\n          ...state,\n          current: {\n            ...state.current,\n            isLoading: true,\n          },\n        };\n      } else if (destination === CurrentWeatherDestinations.FAVORITE) {\n        return {\n          ...state,\n          favorites: {\n            ...state.favorites,\n            [locationKey]: {\n              ...state.favorites[locationKey],\n              isLoading: true,\n            },\n          },\n        };\n      } else {\n        return state;\n      }\n    },\n    [actions.getCurrent.success]: (state, action) => {\n      const { data, destination, locationKey } = action.payload;\n\n      if (destination === CurrentWeatherDestinations.SELECTED) {\n        return {\n          ...state,\n          current: {\n            ...state.current,\n            isLoading: false,\n            data: action.payload.data,\n          },\n        };\n      } else if (destination === CurrentWeatherDestinations.FAVORITE) {\n        return {\n          ...state,\n          favorites: {\n            ...state.favorites,\n            [locationKey]: {\n              ...state.favorites[locationKey],\n              isLoading: false,\n              data,\n            },\n          },\n        };\n      } else {\n        return state;\n      }\n    },\n    [actions.getCurrent.failure]: (state, action) => {\n      const { destination, locationKey } = action.payload;\n\n      if (destination === CurrentWeatherDestinations.SELECTED) {\n        return {\n          ...state,\n          current: {\n            ...state.current,\n            isLoading: false,\n          },\n        };\n      } else if (destination === CurrentWeatherDestinations.FAVORITE) {\n        return {\n          ...state,\n          favorites: {\n            ...state.favorites,\n            [locationKey]: {\n              ...state.favorites[locationKey],\n              isLoading: false,\n            },\n          },\n        };\n      } else {\n        return state;\n      }\n    },\n\n    [actions.getForecasted.start]: (state, action) => ({\n      ...state,\n      forecasted: {\n        ...state.forecasted,\n        isLoading: true,\n      },\n    }),\n    [actions.getForecasted.success]: (state, action) => ({\n      ...state,\n      forecasted: {\n        ...state.forecasted,\n        isLoading: false,\n        data: action.payload.data,\n        dataSequence: action.payload.dataSequence,\n      },\n    }),\n    [actions.getForecasted.failure]: (state, action) => ({\n      ...state,\n      forecasted: {\n        ...state.forecasted,\n        isLoading: false,\n      },\n    }),\n  },\n  initialState\n);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  suggestionsGet,\n  selectedLocationSet,\n  selectedLocationRemove,\n} = createActions(\n  {\n    SUGGESTIONS_GET: {\n      START: ({ query }) => ({ query }),\n      SUCCESS: ({ data, dataSequence }) => ({ data, dataSequence }),\n      FAILURE: undefined,\n    },\n    SELECTED_LOCATION_SET: ({ locationKey }) => ({ locationKey }),\n    SELECTED_LOCATION_REMOVE: undefined,\n  },\n  { prefix: 'LOCATIONS' }\n);\n","import { handleActions } from 'redux-actions';\n\nimport * as actions from './actions';\n\nconst initialState = {\n  suggestions: {\n    isLoading: false,\n    data: {},\n    dataSequence: [],\n    selectedLocationKey: '',\n  },\n  isDefaultLocationSelected: true,\n};\n\nexport const locationsReducer = handleActions(\n  {\n    [actions.suggestionsGet.start]: (state, action) => ({\n      ...state,\n      suggestions: {\n        ...state.suggestions,\n        isLoading: true,\n      },\n    }),\n    [actions.suggestionsGet.success]: (state, action) => {\n      const { data, dataSequence } = action.payload;\n\n      return {\n        ...state,\n        suggestions: {\n          ...state.suggestions,\n          isLoading: false,\n          data,\n          dataSequence,\n        },\n      };\n    },\n    [actions.suggestionsGet.failure]: (state, action) => ({\n      ...state,\n      suggestions: {\n        ...state.suggestions,\n        isLoading: false,\n      },\n    }),\n\n    [actions.selectedLocationSet]: (state, action) => ({\n      ...state,\n      isDefaultLocationSelected: false,\n      suggestions: {\n        ...state.suggestions,\n        selectedLocationKey: action.payload.locationKey,\n      },\n    }),\n\n    [actions.selectedLocationRemove]: (state, action) => ({\n      ...state,\n      suggestions: {\n        ...state.suggestions,\n        selectedLocationKey: '',\n      },\n    }),\n  },\n  initialState\n);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  measurementSystemSet,\n  favoriteLocationSet,\n  favoriteLocationRemove,\n} = createActions(\n  {\n    MEASUREMENT_SYSTEM_SET: ({ measurementSystem }) => ({ measurementSystem }),\n    FAVORITE_LOCATION_SET: ({\n      locationKey,\n      country,\n      administrativeArea,\n      city,\n    }) => ({ locationKey, country, administrativeArea, city }),\n    FAVORITE_LOCATION_REMOVE: ({ locationKey }) => ({ locationKey }),\n  },\n  { prefix: 'CONFIG' }\n);\n","export const MeasurementSystem = {\n  METRIC: 'metric',\n  IMPERIAL: 'imperial',\n};\n","import { handleActions } from 'redux-actions';\n\nimport * as actions from './actions';\nimport { MeasurementSystem } from './enums';\n\nconst initialState = {\n  measurementSystemIsMetric: true,\n  favoriteLocations: {\n    list: [],\n    locationData: {},\n  },\n};\n\nexport const configReducer = handleActions(\n  {\n    [actions.measurementSystemSet]: (state, action) => {\n      const { measurementSystem } = action.payload;\n\n      return {\n        ...state,\n        measurementSystemIsMetric:\n          measurementSystem === MeasurementSystem.METRIC ? true : false,\n      };\n    },\n\n    [actions.favoriteLocationSet]: (state, action) => {\n      const { locationKey, country, administrativeArea, city } = action.payload;\n\n      const updatedList = [...state.favoriteLocations.list];\n      updatedList.push(locationKey);\n      if (updatedList.length > 5) updatedList.shift();\n\n      return {\n        ...state,\n        favoriteLocations: {\n          ...state.favoriteLocations,\n          list: updatedList,\n          locationData: {\n            ...state.favoriteLocations.locationData,\n            [locationKey]: {\n              country,\n              administrativeArea,\n              city,\n            },\n          },\n        },\n      };\n    },\n\n    [actions.favoriteLocationRemove]: (state, action) => {\n      const locationKey = action.payload.locationKey;\n      const updatedList = [...state.favoriteLocations.list];\n      const locationData = state.favoriteLocations.locationData;\n\n      delete locationData[locationKey];\n\n      const index = updatedList.indexOf(locationKey);\n      if (index > -1) {\n        updatedList.splice(index, 1);\n      }\n\n      return {\n        ...state,\n        favoriteLocations: {\n          ...state.favoriteLocations,\n          list: updatedList,\n          locationData,\n        },\n      };\n    },\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\n\nimport { weatherReducer } from './weather/reducer';\nimport { locationsReducer } from './locations/reducer';\nimport { configReducer } from './config/reducer';\n\nexport default combineReducers({\n  weather: weatherReducer,\n  locations: locationsReducer,\n  config: configReducer,\n});\n","import axios from 'axios';\n\nexport class API {\n  constructor(domain, options = {}) {\n    this.axios = axios.create({\n      baseURL: domain,\n      ...options\n    });\n\n    const createMethod = method => {\n      this[method] = this._createRequest(method);\n    };\n\n    ['get', 'post', 'patch', 'put', 'delete'].forEach(createMethod);\n  }\n\n  _createRequest(method) {\n    return async function(url, body, config) {\n        const response = await this.axios[method](url, body, config);\n        return (response && response.data) || null;\n    };\n  }\n}\n","import { API } from './api';\n\nconst DOMAIN = process.env.REACT_APP_DOMAIN;\n\nexport const api = new API(DOMAIN);\n\nexport const locationsCitiesGet = params =>\n  api.get(\n    `/locations/v1/cities/autocomplete?apikey=${'Cdm1mUvzkgBTTL5rCDVZjm608PevqlTB'}&q=${\n      params.query\n    }&language=${params.language}` //TODO: move apikey\n  );\n\nexport const weatherCurrentGet = params =>\n  api.get(\n    `/currentconditions/v1/${\n      params.locationKey\n    }?apikey=${'Cdm1mUvzkgBTTL5rCDVZjm608PevqlTB'}&language=${\n      params.language\n    }&details=${params.withFullDetails}` //TODO: move apikey\n  );\n\nexport const weatherForecastGet = params =>\n  api.get(\n    `/forecasts/v1/daily/5day/${\n      params.locationKey\n    }?apikey=${'Cdm1mUvzkgBTTL5rCDVZjm608PevqlTB'}&language=${\n      params.language\n    }&details=${params.withFullDetails}&metric=${params.isMetricValues}` //TODO: move apikey\n  );\n","export const defaultLocationData = {\n  // TODO: get from BE\n  TEL_AVIV: {\n    LOCATION_KEY: 215854,\n    COUNTRY_NAME: 'Israel',\n    CITY_NAME: 'Tel Aviv',\n    ADMINISTRATIVE_AREA_NAME: 'Tel Aviv',\n  },\n};\n","import { all, call, put, takeLatest, fork, select } from 'redux-saga/effects';\n\nimport { weatherCurrentGet, weatherForecastGet } from 'api';\n\nimport { handleRequestError } from 'helpers/utils';\n\nimport * as locationsActions from 'store/locations/actions';\nimport * as weatherActions from 'store/weather/actions';\n\nimport { CurrentWeatherDestinations } from './enums';\nimport { defaultLocationData } from 'constants/defaultLocationData';\n\nexport function* getCurrentWeather(locationKey, destination) {\n  yield put(\n    weatherActions.getCurrent.start({\n      locationKey,\n      destination,\n    })\n  );\n\n  let data;\n\n  try {\n    data = yield call(weatherCurrentGet, {\n      locationKey,\n      language: 'en-us',\n      withFullDetails: 'true',\n    });\n  } catch (errors) {\n    handleRequestError(errors);\n    yield put(\n      weatherActions.getCurrent.failure({\n        locationKey,\n        destination,\n      })\n    );\n    return;\n  }\n\n  yield put(\n    weatherActions.getCurrent.success({\n      data: data[0],\n      locationKey,\n      destination,\n    })\n  );\n}\n\nexport function* getForecastedWeather(locationKey) {\n  yield put(weatherActions.getForecasted.start({ locationKey }));\n\n  let data;\n\n  try {\n    data = yield call(weatherForecastGet, {\n      locationKey,\n      language: 'en-us',\n      withFullDetails: 'true',\n      isMetricValues: 'true',\n    });\n  } catch (errors) {\n    handleRequestError(errors);\n    yield put(weatherActions.getForecasted.failure());\n    return;\n  }\n\n  const forecastData = {};\n  let dataSequence = [];\n\n  data.DailyForecasts.forEach(element => {\n    forecastData[element.EpochDate] = { ...element };\n    dataSequence.push(element.EpochDate);\n  });\n\n  yield put(\n    weatherActions.getForecasted.success({\n      data: forecastData,\n      dataSequence,\n    })\n  );\n}\n\nexport function* getWeatherSetDefault(action) {\n  // TODO: rework\n\n  yield put(\n    locationsActions.suggestionsGet.start({\n      query: defaultLocationData.TEL_AVIV.CITY_NAME,\n    })\n  );\n\n  yield put(\n    locationsActions.selectedLocationSet({\n      locationKey: defaultLocationData.TEL_AVIV.LOCATION_KEY,\n    })\n  );\n}\n\nexport function* getWeatherSetFull(action) {\n  const { locationKey } = action.payload;\n\n  yield fork(\n    getCurrentWeather,\n    locationKey,\n    CurrentWeatherDestinations.SELECTED\n  );\n  yield fork(\n    getForecastedWeather,\n    locationKey,\n    CurrentWeatherDestinations.SELECTED\n  );\n}\n\nexport function* getWeatherSetFavorites(action) {\n  const favoriteLocationsList = yield select(\n    state => state.config.favoriteLocations.list\n  );\n\n  yield all(\n    favoriteLocationsList.map(el =>\n      call(getCurrentWeather, el, CurrentWeatherDestinations.FAVORITE)\n    )\n  );\n}\n\nexport function* weatherSagas() {\n  yield all([\n    yield takeLatest(locationsActions.selectedLocationSet, getWeatherSetFull), //TODO: crossactions / rework?\n    yield takeLatest(weatherActions.getFullSet, getWeatherSetFull),\n\n    yield takeLatest(weatherActions.getFavsSet, getWeatherSetFavorites),\n\n    yield takeLatest(weatherActions.getDefaultSet, getWeatherSetDefault),\n  ]);\n}\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\n\nimport { locationsCitiesGet } from 'api';\nimport { handleRequestError } from 'helpers/utils';\n\nimport * as actions from './actions';\n\nexport function* getSuggestions(action) {\n  const { query } = action.payload;\n\n  let data;\n\n  try {\n    data = yield call(locationsCitiesGet, {\n      query,\n      language: 'en-us',\n    });\n  } catch (errors) {\n    handleRequestError(errors);\n    yield put(actions.suggestionsGet.failure());\n    return;\n  }\n\n  const locationsData = {};\n  let dataSequence = [];\n\n  data.forEach(element => {\n    locationsData[element.Key] = { ...element };\n    dataSequence.push(element.Key);\n  });\n\n  yield put(\n    actions.suggestionsGet.success({\n      data: locationsData,\n      dataSequence: dataSequence,\n    })\n  );\n}\n\nexport function* locationsSagas() {\n  yield all([yield takeLatest(actions.suggestionsGet.start, getSuggestions)]);\n}\n","import { fork } from 'redux-saga/effects';\n\nimport { weatherSagas } from './weather/sagas';\nimport { locationsSagas } from './locations/sagas';\n\nexport default function* rootSaga() {\n  yield fork(weatherSagas);\n  yield fork(locationsSagas);\n}\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createMigrate, persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { handleNotification } from 'helpers/utils';\nimport { migrations } from './migrations';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst rootPersistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['config'],\n  version: 0,\n  migrate: createMigrate(migrations, { debug: false }),\n};\n\nconst persistedReducer = persistReducer(rootPersistConfig, rootReducer);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware({\n  onError: error => {\n    handleNotification('Error!');\n    console.log(error);\n  },\n});\n\nexport const store = createStore(\n  persistedReducer,\n  {},\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n","import customTheme from './custom';\n\nexport default customTheme;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#4dabf5',\n      main: '#2196f3',\n      dark: '#1769aa',\n    },\n    secondary: {\n      light: '#33eb91',\n      main: '#00e676',\n      dark: '#00a152',\n    },\n    error: {\n      light: '#ff6333',\n      main: '#ff3d00',\n      dark: '#b22a00',\n    },\n    text: {\n      primary: '#000',\n      secondary: '#fff',\n    },\n    additional: {\n      purple: '#d500f9',\n    },\n  },\n});\n\nexport default customTheme;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","export const ROUTES = {\n  REDIRECT_URL: 'weather',\n  WEATHER: 'weather',\n  FAVORITES: 'favorites',\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Favorite, Cloud } from '@material-ui/icons';\n\nimport { ROUTES } from 'constants/routes';\nimport history from 'componentsCommon/history';\n\nfunction NavMain(location) {\n  const navItems = [\n    {\n      text: 'Weather',\n      path: ROUTES.WEATHER,\n      icon: <Cloud />,\n    },\n    {\n      text: 'Favorites',\n      path: ROUTES.FAVORITES,\n      icon: <Favorite />,\n    },\n  ];\n\n  return (\n    <ButtonGroup variant='text' aria-label='main navigation'>\n      {navItems.map(item => {\n        return (\n          <Button\n            startIcon={item.icon}\n            key={item.text}\n            onClick={e => {\n              const to = '/' + item.path;\n              if (history.location.pathname !== to) {\n                history.push(to);\n              }\n            }}\n            selected={location.location.pathname === `/${item.path}`}\n            color={\n              location.location.pathname === `/${item.path}` ? 'secondary' : ''\n            }\n          >\n            {item.text}\n          </Button>\n        );\n      })}\n    </ButtonGroup>\n  );\n}\n\nexport default withRouter(NavMain);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport * as configActions from 'store/config/actions';\n\nimport { MeasurementSystem } from 'store/config/enums';\n\nfunction SystemSelector() {\n  const dispatch = useDispatch();\n\n  const isMetricSystem = useSelector(\n    state => state.config.measurementSystemIsMetric\n  );\n\n  const toggleIsMetric = () => {\n    dispatch(\n      configActions.measurementSystemSet({\n        measurementSystem:\n          isMetricSystem === true\n            ? MeasurementSystem.IMPERIAL\n            : MeasurementSystem.METRIC,\n      })\n    );\n  };\n\n  return (\n    <div>\n      {/* TODO: use custom radiobutton */}\n      <span>Imperial</span>\n      <Switch size='small' checked={isMetricSystem} onChange={toggleIsMetric} />\n      <span>Metric</span>\n    </div>\n  );\n}\n\nexport default SystemSelector;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flex: '0 0 auto',\n  },\n  toolbar: {\n    padding: theme.spacing(3),\n\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(2),\n    },\n  },\n  toolbarContentWrapper: {\n    width: '100%',\n  },\n  topRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'nowrap',\n\n    [theme.breakpoints.down('xs')]: {\n      flexWrap: 'wrap',\n    },\n  },\n  bottomRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    overflow: 'hidden',\n    maxHeight: 0,\n    transition: 'max-height 0.3s, margin 0.3s',\n    marginTop: 0,\n  },\n  bottomRowActive: {\n    maxHeight: '40px',\n    marginTop: theme.spacing(2),\n  },\n  logoMain: {\n    marginRight: theme.spacing(2),\n    fontSize: '25px',\n    flex: '0 0 auto',\n\n    [theme.breakpoints.down('xs')]: {\n      flex: '1 0 auto',\n    },\n  },\n  controlsWrapper: {\n    flex: '1 0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'space-between',\n    },\n  },\n  navWrapper: {\n    marginRight: theme.spacing(2),\n    flex: '0 0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { SettingsApplications } from '@material-ui/icons';\n\nimport { NavMain } from './NavMain';\nimport { SystemSelector } from './SystemSelector';\n\nimport useStyles from './Header.styles';\n\nfunction Header() {\n  const classes = useStyles();\n\n  const [settingsIsOpened, setSettingsIsOpened] = useState(false);\n\n  const onSettingsToggle = () => {\n    setSettingsIsOpened(!settingsIsOpened);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.toolbarContentWrapper}>\n            <div className={classes.topRow}>\n              <div className={classes.logoMain}>Weather app</div>\n              <div className={classes.controlsWrapper}>\n                <div className={classes.navWrapper}>\n                  <NavMain />\n                </div>\n                <IconButton\n                  aria-label='settings'\n                  onClick={onSettingsToggle}\n                  className={classes.button}\n                >\n                  <SettingsApplications />\n                </IconButton>\n              </div>\n            </div>\n            <div\n              className={classNames(classes.bottomRow, {\n                [classes.bottomRowActive]: settingsIsOpened,\n              })}\n            >\n              <SystemSelector />\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  pageWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    justifyContent: 'flex-start',\n    minHeight: '100vh',\n  },\n  mainContentWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1 0 auto',\n    padding: theme.spacing(3),\n    height: '100%',\n    width: '100%',\n\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\n\nimport { Header } from 'componentsCommon/Header';\n\nimport useStyles from './CommonLayout.styles';\n\nfunction CommonLayout({ children }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.pageWrapper}>\n      <Header />\n      <div className={classes.mainContentWrapper}>{children}</div>\n    </div>\n  );\n}\n\nexport default CommonLayout;\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport theme from 'theme';\n\nconst styles = {\n  heading: {\n    color: theme.palette.error.main,\n  },\n  errorMessage: {\n    marginBottom: '20px',\n    fontWeight: 'bold',\n  },\n};\n\nclass PageErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, errorMessage: '' };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, errorMessage: JSON.stringify(error) };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h2 className={classes.heading}>Error!</h2>\n          <div className={classes.errorMessage}>\n            Message: {this.state.errorMessage}\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withStyles(styles)(PageErrorBoundary);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Select from 'react-select';\n\nfunction SelectContainer({ inputChange, children }) {\n  return <div onKeyUp={inputChange}>{children}</div>;\n}\n\nAutocompleteUnit.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  options: PropTypes.array.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSelectOption: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n};\n\nfunction AutocompleteUnit({\n  isLoading,\n  options,\n  onInputChange,\n  onSelectOption,\n  name,\n  isDisabled,\n  defaultValue,\n  placeholder,\n}) {\n  return (\n    <SelectContainer inputChange={onInputChange}>\n      <Select\n        className='basic-single'\n        classNamePrefix='select'\n        defaultValue={defaultValue}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        isClearable={true}\n        isSearchable={true}\n        name={name}\n        options={options}\n        onChange={onSelectOption}\n        placeholder={placeholder}\n      />\n    </SelectContainer>\n  );\n}\n\nexport default AutocompleteUnit;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  autocompleteUnitWrapper: {\n    marginBottom: 0,\n    transition: 'margin 0.3s',\n  },\n  autocompleteUnitWrapperWithError: {\n    marginBottom: theme.spacing(2),\n  },\n  autocompleteErrorMessage: {\n    color: theme.palette.error.main,\n  },\n}));\n\nexport default useStyles;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { get } from 'lodash';\n\nimport * as locationsActions from 'store/locations/actions';\n\nimport { AutocompleteUnit } from 'componentsCommon/AutocompleteUnit';\n\nimport useStyles from './LocationAutocomplete.styles';\n\nfunction LocationAutocomplete() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const suggestionsData = useSelector(\n    state => state.locations.suggestions.data\n  );\n\n  const suggestionsDataSequence = useSelector(\n    state => state.locations.suggestions.dataSequence\n  );\n\n  const isLoading = useSelector(state => state.locations.suggestions.isLoading);\n\n  const [options, setOptions] = useState([]);\n  const [isValidationError, setIsValidationError] = useState(false);\n\n  const englishOnlyRegexp = /^[a-zA-Z]+$/;\n\n  useEffect(() => {\n    setOptions(\n      suggestionsDataSequence.map(el => {\n        const cityName = get(suggestionsData, `[${el}].LocalizedName`, '');\n        const administrativeAreaName = get(\n          suggestionsData,\n          `[${el}].AdministrativeArea.LocalizedName`,\n          ''\n        );\n        const countryName = get(\n          suggestionsData,\n          `[${el}].Country.LocalizedName`,\n          ''\n        );\n        return {\n          value: el,\n          label: `${cityName}, ${administrativeAreaName}, ${countryName}`,\n        };\n      })\n    );\n  }, [suggestionsData, suggestionsDataSequence]);\n\n  const onInputChange = e => {\n    if (!englishOnlyRegexp.test(e.target.value)) {\n      setIsValidationError(true);\n    } else if (\n      get(e, 'keyCode', '') !== 37 &&\n      get(e, 'keyCode', '') !== 38 &&\n      get(e, 'keyCode', '') !== 39 &&\n      get(e, 'keyCode', '') !== 13 &&\n      get(e, 'keyCode', '') !== 40\n    ) {\n      setIsValidationError(false);\n\n      dispatch(\n        locationsActions.suggestionsGet.start({\n          query: e.target.value,\n        })\n      );\n    }\n  };\n\n  const onSelectOption = selected => {\n    if (selected !== null) {\n      dispatch(\n        locationsActions.selectedLocationSet({\n          locationKey: selected.value,\n        })\n      );\n    }\n  };\n\n  return (\n    <div className={classes.rootWrapper}>\n      <div\n        className={classNames(classes.autocompleteUnitWrapper, {\n          [classes.autocompleteUnitWrapperWithError]: isValidationError,\n        })}\n      >\n        <AutocompleteUnit\n          isLoading={isLoading}\n          options={options}\n          onInputChange={onInputChange}\n          onSelectOption={onSelectOption}\n          name={'Location'}\n          isDisabled={false}\n          defaultValue={''}\n          placeholder={'Enter location'}\n        />\n      </div>\n\n      {isValidationError ? (\n        <div className={classes.autocompleteErrorMessage}>\n          Enter location name, only english letters available!\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default LocationAutocomplete;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './Spinner.css'; // TODO: convert to jss\n\nSpinner.propTypes = {\n  isVisible: PropTypes.bool.isRequired,\n  isSmall: PropTypes.bool.isRequired,\n};\n\nfunction Spinner({ isVisible, isSmall }) {\n  return (\n    <div\n      className={classNames('spinnerOverlay', {\n        'spinnerOverlayHidden': !isVisible,\n      })}\n    >\n      <div className={classNames('loader', {\n          'loaderSmall': isSmall,\n        })}\n      >Loading...</div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    position: 'relative',\n\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  locationInfoWrapper: {\n    flex: '0 0 auto',\n\n    [theme.breakpoints.down('xs')]: {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  favButton: {\n    flex: '0 0 auto',\n  },\n}));\n\nexport default useStyles;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get } from 'lodash';\n\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\n\nimport * as configActions from 'store/config/actions';\n\nimport { Spinner } from 'componentsCommon/Spinner';\n\nimport useStyles from './LocationInfo.styles';\n\nfunction LocationInfo() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const [isFavoriteLocation, setIsFavoriteLocation] = useState(false);\n\n  const favoriteLocations = useSelector(\n    state => state.config.favoriteLocations.list\n  );\n\n  const isLoading = useSelector(state => state.locations.suggestions.isLoading);\n\n  const suggestionsData = useSelector(\n    state => state.locations.suggestions.data\n  );\n\n  const selectedLocationKey = useSelector(\n    state => state.locations.suggestions.selectedLocationKey\n  );\n\n  const currentLocation = get(suggestionsData, selectedLocationKey, {});\n\n  const city = get(currentLocation, 'LocalizedName', '');\n  const country = get(currentLocation, 'Country.LocalizedName', '');\n  const administrativeArea = get(\n    currentLocation,\n    'AdministrativeArea.LocalizedName',\n    ''\n  );\n\n  useEffect(() => {\n    favoriteLocations.includes(selectedLocationKey)\n      ? setIsFavoriteLocation(true)\n      : setIsFavoriteLocation(false);\n  }, [favoriteLocations, selectedLocationKey]);\n\n  const handleFavorite = () => {\n    isFavoriteLocation\n      ? dispatch(\n          configActions.favoriteLocationRemove({\n            locationKey: selectedLocationKey,\n          })\n        )\n      : dispatch(\n          configActions.favoriteLocationSet({\n            locationKey: selectedLocationKey,\n            country,\n            administrativeArea,\n            city,\n          })\n        );\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.locationInfoWrapper}>\n        {city ? <div>{city}</div> : null}\n        <div>\n          {country ? <span>{country}</span> : null}\n          {country && administrativeArea ? <span>{', '}</span> : null}\n          {administrativeArea ? <span>{administrativeArea}</span> : null}\n        </div>\n      </div>\n\n      <Button\n        variant='contained'\n        color='primary'\n        className={classes.favButton}\n        startIcon={isFavoriteLocation ? <Favorite /> : <FavoriteBorder />}\n        onClick={handleFavorite}\n      >\n        {isFavoriteLocation ? 'Remove from favorites' : 'Add to favorites'}\n      </Button>\n      <Spinner isVisible={isLoading} isSmall={true} />\n    </div>\n  );\n}\n\nexport default LocationInfo;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nAnimatedContainer.propTypes = {\n  show: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nfunction AnimatedContainer({ show, children }) {\n  const [render, setRender] = useState(show);\n\n  useEffect(() => {\n    if (show) setRender(true);\n  }, [show]);\n\n  const onAnimationEnd = () => {\n    if (!show) setRender(false);\n  };\n\n  return (\n    render && (\n      <div\n        style={{ animation: `${show ? 'fadeIn' : 'fadeOut'} 0.3s` }}\n        onAnimationEnd={onAnimationEnd}\n      >\n        {children}\n      </div>\n    )\n  );\n}\n\nexport default AnimatedContainer;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  },\n  sectionPaper: {\n    overflow: 'hidden',\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(2),\n\n    '&:last-of-type': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  sectionHeader: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '16px',\n  },\n  sectionMainWrapper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { get } from 'lodash';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Spinner } from 'componentsCommon/Spinner';\n\nimport useStyles from './AdditionalWeatherDetails.styles';\n\nAdditionalWeatherDetails.propTypes = {\n  isMetricSystem: PropTypes.bool.isRequired,\n};\n\nfunction AdditionalWeatherDetails({ isMetricSystem }) {\n  const classes = useStyles();\n\n  const currentWeatherData = useSelector(state => state.weather.current.data);\n\n  const isLoading = useSelector(state => state.weather.current.isLoading);\n\n  const renderSingleValuedParam = (dataObj, partialSelector, label) => {\n    const value = get(dataObj, partialSelector, '');\n    return (\n      <div className={classes.additionalParameter}>\n        <b>{label}:</b> <span>{value ? value : 'N/A'}</span>\n      </div>\n    );\n  };\n\n  const renderMultiValuedParam = (dataObj, partialSelector, label) => {\n    const metricValue = get(dataObj, `${partialSelector}.Metric.Value`, '');\n    const metricUnit = get(dataObj, `${partialSelector}.Metric.Unit`, '');\n    const imperialValue = get(dataObj, `${partialSelector}.Imperial.Value`, '');\n    const imperialUnit = get(dataObj, `${partialSelector}.Imperial.Unit`, '');\n    return (\n      <div className={classes.additionalParameter}>\n        <b>{label}:</b>{' '}\n        {isMetricSystem ? (\n          <span>{metricValue ? `${metricValue}, ${metricUnit}` : 'N/A'}</span>\n        ) : (\n          <span>\n            {imperialValue ? `${imperialValue}, ${imperialUnit}` : 'N/A'}\n          </span>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.sectionPaper}>\n        <Typography\n          variant='h6'\n          component='h3'\n          className={classes.sectionHeader}\n        >\n          Temperature\n        </Typography>\n        <div className={classes.sectionMainWrapper}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={6}>\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'RealFeelTemperatureShade',\n                'Real feel in the shade'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'Past24HourTemperatureDeparture',\n                'Departure for past 24 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'ApparentTemperature',\n                'Apparent'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'WindChillTemperature',\n                'Wind chill'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'WetBulbTemperature',\n                'Wet bulb'\n              )}\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'TemperatureSummary.Past6HourRange.Minimum',\n                'Min. summary / past 6 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'TemperatureSummary.Past12HourRange.Minimum',\n                'Min. summary / past 12 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'TemperatureSummary.Past24HourRange.Minimum',\n                'Min. summary / past 24 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'TemperatureSummary.Past6HourRange.Maximum',\n                'Max. summary / past 6 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'TemperatureSummary.Past12HourRange.Maximum',\n                'Max. summary / past 12 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'TemperatureSummary.Past24HourRange.Maximum',\n                'Max. summary / past 24 hours'\n              )}\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n\n      <Paper className={classes.sectionPaper}>\n        <Typography\n          variant='h6'\n          component='h3'\n          className={classes.sectionHeader}\n        >\n          Precipitation\n        </Typography>\n        <div className={classes.sectionMainWrapper}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={6}>\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'HasPrecipitation',\n                'Precipitation'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'Precip1hr',\n                'Amount of precipitation / past hour'\n              )}\n\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'PrecipitationType',\n                'Type of precipitation'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'PrecipitationSummary.PastHour',\n                'Precipitation summary / past hour'\n              )}\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Paper className={classes.sectionPaper}></Paper>\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'PrecipitationSummary.Past3Hours',\n                'Precipitation summary / past 3 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'PrecipitationSummary.Past6Hours',\n                'Precipitation summary / past 6 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'PrecipitationSummary.Past9Hours',\n                'Precipitation summary / past 9 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'PrecipitationSummary.Past12Hours',\n                'Precipitation summary / past 12 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'PrecipitationSummary.Past18Hours',\n                'Precipitation summary / past 18 hours'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'PrecipitationSummary.Past24Hours',\n                'Precipitation summary / past 24 hours'\n              )}\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n\n      <Paper className={classes.sectionPaper}>\n        <Typography\n          variant='h6'\n          component='h3'\n          className={classes.sectionHeader}\n        >\n          Other\n        </Typography>\n        <div className={classes.sectionMainWrapper}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={6}>\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'Wind.Speed',\n                'Wind speed'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'WindGust.Speed',\n                'Wind gust speed'\n              )}\n              <br />\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'UVIndex',\n                'Ultraviolet radiation from the sun'\n              )}\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'UVIndexText',\n                'Ultraviolet radiation from the sun text'\n              )}\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Paper className={classes.sectionPaper}></Paper>\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'DewPoint',\n                'Dew point'\n              )}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'Visibility',\n                'Visibility'\n              )}\n              {renderMultiValuedParam(currentWeatherData, 'Ceiling', 'Ceiling')}\n              {renderMultiValuedParam(\n                currentWeatherData,\n                'Pressure',\n                'Pressure'\n              )}\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'EpochTime',\n                'Time of observation'\n              )}\n\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'IsDayTime',\n                'isDayTime'\n              )}\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'RelativeHumidity',\n                'Relative humidity'\n              )}\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'Wind.Direction.Degrees',\n                'Wind direction in Azimuth degrees'\n              )}\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'ObstructionsToVisibility',\n                'Obstructions to visibility'\n              )}\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'CloudCover',\n                'Cloud cover'\n              )}\n              {renderSingleValuedParam(\n                currentWeatherData,\n                'PressureTendency.LocalizedText',\n                'Pressure tendency'\n              )}\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n      <Spinner isVisible={isLoading} isSmall={false} />\n    </div>\n  );\n}\n\nexport default AdditionalWeatherDetails;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    height: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  date: {\n    fontSize: '16px',\n    fontWeight: 'bold',\n    flex: '0 0 auto',\n    marginBottom: theme.spacing(1),\n  },\n  weatherWrapper: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  weatherConditionIconWrapper: {\n    flex: '0 0 auto',\n  },\n  weatherConditionDescription: {\n    fontWeight: 'bold',\n  },\n  temperatureWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  temperatureSection: {\n    flex: '0 0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  },\n\n  temperatureseparator: {\n    flex: '0 0 auto',\n    margin: '0 5px',\n  },\n  temperatureValue: {\n    flex: '0 0 auto',\n    fontWeight: 'bold',\n    fontSize: '20px',\n  },\n  temperatureUnit: {\n    flex: '0 0 auto',\n    fontSize: '10px',\n  },\n}));\n\nexport default useStyles;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { get } from 'lodash';\nimport moment from 'moment';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { Spinner } from 'componentsCommon/Spinner';\n\nimport useStyles from './ForecastedWeatherCard.styles';\n\nForecastedWeatherCard.propTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n};\n\nfunction ForecastedWeatherCard({ id }) {\n  const classes = useStyles();\n\n  const forecastedItemData = useSelector(state =>\n    get(state, `weather.forecasted.data[${id}]`, {})\n  );\n\n  const date = get(forecastedItemData, 'Date', '');\n\n  const formattedDate = moment(date).format('MMM Do YYYY');\n\n  const weatherIconDay = get(forecastedItemData, 'Day.Icon', '');\n\n  const weatherTextDay = get(forecastedItemData, 'Day.IconPhrase', '');\n\n  const TempMinValue = get(forecastedItemData, 'Temperature.Minimum.Value', '');\n  const TempMinUnit = get(forecastedItemData, 'Temperature.Minimum.Unit', '');\n\n  const TempMaxValue = get(forecastedItemData, 'Temperature.Maximum.Value', '');\n  const TempMaxUnit = get(forecastedItemData, 'Temperature.Maximum.Unit', '');\n\n  const isLoading = useSelector(state => state.weather.forecasted.isLoading);\n\n  return (\n    <Paper className={classes.root}>\n      <Spinner isVisible={isLoading} isSmall={false} />\n      <div className={classes.date}>{formattedDate}</div>\n      <div className={classes.weatherWrapper}>\n        <div className={classes.weatherConditionIconWrapper}>\n          {weatherIconDay ? (\n            <img\n              src={`https://developer.accuweather.com/sites/default/files/${(\n                '0' + weatherIconDay\n              ).slice(-2)}-s.png`} // TODO: rework\n              alt='weather condition icon'\n            />\n          ) : null}\n        </div>\n        <div className={classes.weatherConditionDescription}>\n          {weatherTextDay}\n        </div>\n      </div>\n      <div className={classes.temperatureWrapper}>\n        <div className={classes.temperatureSection}>\n          {TempMinValue ? (\n            <Fragment>\n              <div className={classes.temperatureValue}>{TempMinValue}</div>\n              <div className={classes.temperatureUnit}>{TempMinUnit}</div>\n            </Fragment>\n          ) : (\n            <div className={classes.temperatureValue}>N/A</div>\n          )}\n        </div>\n        <div className={classes.temperatureseparator}> - </div>\n        <div className={classes.temperatureSection}>\n          {TempMaxValue ? (\n            <Fragment>\n              <div className={classes.temperatureValue}>{TempMaxValue}</div>\n              <div className={classes.temperatureUnit}>{TempMaxUnit}</div>\n            </Fragment>\n          ) : (\n            <div className={classes.temperatureValue}>N/A</div>\n          )}\n        </div>\n      </div>\n    </Paper>\n  );\n}\n\nexport default ForecastedWeatherCard;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflow: 'hidden',\n  },\n  header: {\n    marginBottom: theme.spacing(2),\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n  },\n  mainContentWrapper: {\n    padding: theme.spacing(2),\n    position: 'relative',\n\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n    },\n  },\n  headerControls: {\n    flex: '0 0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'flex-start',\n      flex: '0  0 100%',\n    },\n  },\n  mainWeatherConditions: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    marginBottom: theme.spacing(2),\n  },\n  temperatureWrapper: {\n    flex: '1 0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginRight: theme.spacing(1),\n\n    [theme.breakpoints.down('xs')]: {\n      flex: '1 0 100%',\n      order: 1,\n      justifyContent: 'space-between',\n    },\n  },\n  temperatureSection: {\n    flex: '0 0 auto',\n    marginRight: theme.spacing(2),\n\n    '&:last-of-type': {\n      marginRight: 0,\n    },\n  },\n  temperaturePrefix: {\n    fontWeight: 'bold',\n  },\n  temperatureMain: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-end',\n  },\n  temperatureValue: {\n    fontWeight: 'bold',\n    fontSize: '32px',\n    flex: '0 0 auto',\n  },\n  temperatureUnit: {\n    fontSize: '14px',\n    flex: '0 0 auto',\n  },\n  weatherWrapper: {\n    flex: '0 0 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.text.secondary,\n    padding: theme.spacing(2),\n\n    [theme.breakpoints.down('xs')]: {\n      flex: '1 0 100%',\n      order: 0,\n      marginBottom: theme.spacing(2),\n    },\n  },\n  weatherConditionIconWrapper: {\n    flex: '0 0 auto',\n\n    '& img': {\n      width: '100px',\n      height: 'auto',\n    },\n  },\n  weatherConditionDescription: {\n    flex: '0 0 auto',\n    textTransform: 'capitalize',\n    fontWeight: 'bold',\n    fontSize: '16px',\n  },\n  bottomSection: {\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(2, 2, 1),\n    color: theme.palette.text.secondary,\n    position: 'relative',\n  },\n  forecastList: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    listStyle: 'none',\n    padding: 0,\n    margin: theme.spacing(0, -1),\n    flexWrap: 'wrap',\n\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  forecastListItem: {\n    flex: '1 0 auto',\n    margin: theme.spacing(0, 1, 1),\n    minWidth: '15%',\n\n    [theme.breakpoints.down('xs')]: {\n      margin: theme.spacing(0, 1, 1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { Fragment, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { get } from 'lodash';\n\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\n\nimport AnimatedContainer from 'componentsCommon/AnimatedContainer/AnimatedContainer';\nimport { AdditionalWeatherDetails } from './AdditionalWeatherDetails';\nimport ForecastedWeatherCard from 'components/ForecastedWeatherCard/ForecastedWeatherCard';\nimport { Spinner } from 'componentsCommon/Spinner';\n\nimport useStyles from './CurrentWeather.styles';\n\nfunction CurrentWeather() {\n  const classes = useStyles();\n\n  const currentWeatherData = useSelector(state => state.weather.current.data);\n\n  const isLoading = useSelector(state => state.weather.current.isLoading);\n\n  const isMetricSystem = useSelector(\n    state => state.config.measurementSystemIsMetric\n  );\n\n  const forecastedWeatherDataSequence = useSelector(\n    state => state.weather.forecasted.dataSequence\n  );\n\n  const [detailsIsOpened, setDetailsIsOpened] = useState(false);\n\n  const weatherText = get(currentWeatherData, 'WeatherText', '');\n  const weatherIcon = get(currentWeatherData, 'WeatherIcon', '');\n\n  const TempValueMetric = get(\n    currentWeatherData,\n    'Temperature.Metric.Value',\n    ''\n  );\n  const TempUnitMetric = get(currentWeatherData, 'Temperature.Metric.Unit', '');\n  const TempValueImperial = get(\n    currentWeatherData,\n    'Temperature.Imperial.Value',\n    ''\n  );\n  const TempUnitImperial = get(\n    currentWeatherData,\n    'Temperature.Imperial.Unit',\n    ''\n  );\n\n  const RealFeelTempValueMetric = get(\n    currentWeatherData,\n    'RealFeelTemperature.Metric.Value',\n    ''\n  );\n  const RealFeelTempUnitMetric = get(\n    currentWeatherData,\n    'RealFeelTemperature.Metric.Unit',\n    ''\n  );\n  const RealFeelTempValueImperial = get(\n    currentWeatherData,\n    'RealFeelTemperature.Imperial.Value',\n    ''\n  );\n  const RealFeelTempUnitImperial = get(\n    currentWeatherData,\n    'RealFeelTemperature.Imperial.Unit',\n    ''\n  );\n\n  const onToggleDetails = () => {\n    setDetailsIsOpened(!detailsIsOpened);\n  };\n\n  const renderForecastList = () => {\n    return (\n      <ul className={classes.forecastList}>\n        {forecastedWeatherDataSequence.map(el => {\n          return (\n            <li className={classes.forecastListItem} key={el}>\n              <ForecastedWeatherCard id={el} isMetricSystem={isMetricSystem} />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant='h6' component='h2' className={classes.header}>\n        Weather today:\n      </Typography>\n      <div className={classes.mainContentWrapper}>\n        <Spinner isVisible={isLoading} isSmall={false} />\n        <div className={classes.mainWeatherConditions}>\n          <div className={classes.temperatureWrapper}>\n            <div className={classes.temperatureSection}>\n              <div className={classes.temperaturePrefix}>Temperature:</div>\n              <div className={classes.temperatureMain}>\n                {isMetricSystem ? (\n                  TempValueMetric ? (\n                    <Fragment>\n                      <div className={classes.temperatureValue}>\n                        {TempValueMetric}\n                      </div>\n                      <div className={classes.temperatureUnit}>\n                        {TempUnitMetric}\n                      </div>\n                    </Fragment>\n                  ) : (\n                    <div className={classes.temperatureValue}>N/A</div>\n                  )\n                ) : TempValueImperial ? (\n                  <Fragment>\n                    <div className={classes.temperatureValue}>\n                      {TempValueImperial}\n                    </div>\n                    <div className={classes.temperatureUnit}>\n                      {TempUnitImperial}\n                    </div>\n                  </Fragment>\n                ) : (\n                  <div className={classes.temperatureValue}>N/A</div>\n                )}\n              </div>\n            </div>\n            <div className={classes.temperatureSection}>\n              <div className={classes.temperaturePrefix}>Feels like:</div>\n              <div className={classes.temperatureMain}>\n                {isMetricSystem ? (\n                  RealFeelTempValueMetric ? (\n                    <Fragment>\n                      <div className={classes.temperatureValue}>\n                        {RealFeelTempValueMetric}\n                      </div>\n                      <div className={classes.temperatureUnit}>\n                        {RealFeelTempUnitMetric}\n                      </div>\n                    </Fragment>\n                  ) : (\n                    <div className={classes.temperatureValue}>N/A</div>\n                  )\n                ) : RealFeelTempValueImperial ? (\n                  <Fragment>\n                    <div className={classes.temperatureValue}>\n                      {RealFeelTempValueImperial}\n                    </div>\n                    <div className={classes.temperatureUnit}>\n                      {RealFeelTempUnitImperial}\n                    </div>\n                  </Fragment>\n                ) : (\n                  <div className={classes.temperatureValue}>N/A</div>\n                )}\n              </div>\n            </div>\n          </div>\n          <Paper className={classes.weatherWrapper}>\n            <div className={classes.weatherConditionIconWrapper}>\n              {weatherIcon ? (\n                <img\n                  src={`https://developer.accuweather.com/sites/default/files/${(\n                    '0' + weatherIcon\n                  ).slice(-2)}-s.png`} // TODO: rework\n                  alt='weather condition icon'\n                />\n              ) : null}\n            </div>\n            <div className={classes.weatherConditionDescription}>\n              {weatherText}\n            </div>\n          </Paper>\n        </div>\n\n        <Button\n          variant='contained'\n          color='primary'\n          className={classes.moreButton}\n          startIcon={detailsIsOpened ? <ExpandLess /> : <ExpandMore />}\n          onClick={onToggleDetails}\n        >\n          {detailsIsOpened ? 'Show less' : 'Show more'}\n        </Button>\n      </div>\n      <div className={classes.bottomSection}>\n        <AnimatedContainer show={!detailsIsOpened}>\n          {renderForecastList()}\n        </AnimatedContainer>\n        <AnimatedContainer show={detailsIsOpened}>\n          <AdditionalWeatherDetails isMetricSystem={isMetricSystem} />\n        </AnimatedContainer>\n      </div>\n    </Paper>\n  );\n}\n\nexport default CurrentWeather;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  sectionPaper: {\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport * as weatherActions from 'store/weather/actions';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { CommonLayout } from 'layouts/CommonLayout';\nimport { PageErrorBoundary } from 'componentsCommon/PageErrorBoundary';\nimport { LocationAutocomplete } from 'components/LocationAutocomplete';\nimport { LocationInfo } from 'components/LocationInfo';\nimport { CurrentWeather } from 'components/CurrentWeather';\n\nimport useStyles from './WeatherPage.styles';\n\nfunction WeatherPage() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const isDefaultLocationSelected = useSelector(\n    state => state.locations.isDefaultLocationSelected\n  );\n\n  useEffect(() => {\n    if (isDefaultLocationSelected) {\n      dispatch(weatherActions.getDefaultSet());\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <CommonLayout>\n      <PageErrorBoundary>\n        <Paper className={classes.sectionPaper}>\n          <LocationAutocomplete />\n        </Paper>\n        <Paper className={classes.sectionPaper}>\n          <LocationInfo />\n        </Paper>\n\n        <CurrentWeather />\n      </PageErrorBoundary>\n    </CommonLayout>\n  );\n}\n\nexport default WeatherPage;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    height: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    position: 'relative',\n    overflow: 'hidden',\n\n    '&:hover $overlayTopPart, &:hover $overlayBottomPart': {\n      opacity: 0.3,\n    },\n  },\n  location: {\n    fontSize: '16px',\n    fontWeight: 'bold',\n    flex: '0 0 auto',\n    marginBottom: theme.spacing(1),\n  },\n  weatherWrapper: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  weatherConditionIconWrapper: {\n    flex: '0 0 auto',\n  },\n  weatherConditionDescription: {\n    fontWeight: 'bold',\n  },\n  temperatureWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    margin: theme.spacing(0, -1),\n  },\n  temperatureSection: {\n    flex: '0 0 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    margin: theme.spacing(0, 1),\n  },\n  temperatureValueWrapper: {\n    flex: '0 0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  },\n  temperatureValue: {\n    flex: '0 0 auto',\n    fontWeight: 'bold',\n    fontSize: '20px',\n  },\n  temperatureUnit: {\n    flex: '0 0 auto',\n    fontSize: '10px',\n  },\n\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  overlayTopPart: {\n    backgroundColor: theme.palette.additional.purple,\n    opacity: '0',\n    transition: 'opacity 0.3s',\n    width: '100%',\n    height: '50%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    '&:hover': {\n      opacity: ['0.7', '!important'],\n      cursor: 'pointer',\n    },\n  },\n  overlayBottomPart: {\n    backgroundColor: theme.palette.error.dark,\n    opacity: '0',\n    transition: 'opacity 0.3s',\n    width: '100%',\n    height: '50%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    '&:hover': {\n      opacity: ['0.7', '!important'],\n      cursor: 'pointer',\n    },\n  },\n  overlayLabel: {\n    fontWeight: 'bold',\n    fontSize: '16px',\n    textTransform: 'uppercase',\n  },\n  overlayIcon: {\n    flex: '1 0 auto',\n    fontSize: '4.5rem',\n    position: 'absolute',\n    opacity: 0.5,\n  },\n}));\n\nexport default useStyles;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get } from 'lodash';\n\nimport * as configActions from 'store/config/actions';\nimport * as locationsActions from 'store/locations/actions';\n\nimport Paper from '@material-ui/core/Paper';\nimport { AddCircleOutline, FavoriteBorder } from '@material-ui/icons';\n\nimport { ROUTES } from 'constants/routes';\nimport history from 'componentsCommon/history';\nimport { Spinner } from 'componentsCommon/Spinner';\n\nimport useStyles from './FavoriteLocationCard.styles';\n\nFavoriteLocationCard.propTypes = {\n  locationKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nfunction FavoriteLocationCard({ locationKey }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const isMetricSystem = useSelector(\n    state => state.config.measurementSystemIsMetric\n  );\n\n  const currentWeatherData = useSelector(\n    state => state.weather.favorites[locationKey]\n  );\n\n  const currentLocationData = useSelector(\n    state => state.config.favoriteLocations.locationData[locationKey]\n  );\n\n  const country = get(currentLocationData, 'country', '');\n  const city = get(currentLocationData, 'city', '');\n\n  const isLoading = get(currentWeatherData, 'isLoading', false);\n\n  const weatherText = get(currentWeatherData, 'data.WeatherText', '');\n  const weatherIcon = get(currentWeatherData, 'data.WeatherIcon', '');\n\n  const TempValueMetric = get(\n    currentWeatherData,\n    'data.Temperature.Metric.Value',\n    ''\n  );\n  const TempUnitMetric = get(\n    currentWeatherData,\n    'data.Temperature.Metric.Unit',\n    ''\n  );\n  const TempValueImperial = get(\n    currentWeatherData,\n    'data.Temperature.Imperial.Value',\n    ''\n  );\n  const TempUnitImperial = get(\n    currentWeatherData,\n    'data.Temperature.Imperial.Unit',\n    ''\n  );\n\n  const RealFeelTempValueMetric = get(\n    currentWeatherData,\n    'data.RealFeelTemperature.Metric.Value',\n    ''\n  );\n  const RealFeelTempUnitMetric = get(\n    currentWeatherData,\n    'data.RealFeelTemperature.Metric.Unit',\n    ''\n  );\n  const RealFeelTempValueImperial = get(\n    currentWeatherData,\n    'data.RealFeelTemperature.Imperial.Value',\n    ''\n  );\n  const RealFeelTempUnitImperial = get(\n    currentWeatherData,\n    'data.RealFeelTemperature.Imperial.Unit',\n    ''\n  );\n\n  const onFavoriteRemove = () => {\n    dispatch(\n      configActions.favoriteLocationRemove({\n        locationKey,\n      })\n    );\n  };\n\n  const onShowDetails = () => {\n    dispatch(\n      locationsActions.selectedLocationSet({\n        locationKey,\n      })\n    );\n    history.push(ROUTES.WEATHER);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Spinner isVisible={isLoading} isSmall={false} />\n      <div className={classes.location}>{`${city}, ${country}`}</div>\n      <div className={classes.weatherWrapper}>\n        <div className={classes.weatherConditionIconWrapper}>\n          {weatherIcon ? (\n            <img\n              src={`https://developer.accuweather.com/sites/default/files/${(\n                '0' + weatherIcon\n              ).slice(-2)}-s.png`} // TODO: rework\n              alt='weather condition icon'\n            />\n          ) : null}\n        </div>\n        <div className={classes.weatherConditionDescription}>{weatherText}</div>\n      </div>\n      <div className={classes.temperatureWrapper}>\n        <div className={classes.temperatureSection}>\n          {isMetricSystem ? (\n            TempValueMetric ? (\n              <Fragment>\n                <div>Temperature:</div>\n                <div className={classes.temperatureValueWrapper}>\n                  <div className={classes.temperatureValue}>\n                    {TempValueMetric}\n                  </div>\n                  <div className={classes.temperatureUnit}>\n                    {TempUnitMetric}\n                  </div>\n                </div>\n              </Fragment>\n            ) : (\n              <div className={classes.temperatureValue}>N/A</div>\n            )\n          ) : TempValueImperial ? (\n            <Fragment>\n              <div>Temperature:</div>\n              <div className={classes.temperatureValueWrapper}>\n                <div className={classes.temperatureValue}>\n                  {TempValueImperial}\n                </div>\n                <div className={classes.temperatureUnit}>\n                  {TempUnitImperial}\n                </div>\n              </div>\n            </Fragment>\n          ) : (\n            <div className={classes.temperatureValue}>N/A</div>\n          )}\n        </div>\n        <div className={classes.temperatureSection}>\n          {isMetricSystem ? (\n            RealFeelTempValueMetric ? (\n              <Fragment>\n                <div>Feels like:</div>\n                <div className={classes.temperatureValueWrapper}>\n                  <div className={classes.temperatureValue}>\n                    {RealFeelTempValueMetric}\n                  </div>\n                  <div className={classes.temperatureUnit}>\n                    {RealFeelTempUnitMetric}\n                  </div>\n                </div>\n              </Fragment>\n            ) : (\n              <div className={classes.temperatureValue}>N/A</div>\n            )\n          ) : RealFeelTempValueImperial ? (\n            <Fragment>\n              <div>Feels like:</div>\n              <div className={classes.temperatureValueWrapper}>\n                <div className={classes.temperatureValue}>\n                  {RealFeelTempValueImperial}\n                </div>\n                <div className={classes.temperatureUnit}>\n                  {RealFeelTempUnitImperial}\n                </div>\n              </div>\n            </Fragment>\n          ) : (\n            <div className={classes.temperatureValue}>N/A</div>\n          )}\n        </div>\n      </div>\n      <div className={classes.overlay}>\n        <div className={classes.overlayTopPart} onClick={onShowDetails}>\n          <AddCircleOutline className={classes.overlayIcon} />\n          <span className={classes.overlayLabel}>Show more</span>\n        </div>\n        <div className={classes.overlayBottomPart} onClick={onFavoriteRemove}>\n          <FavoriteBorder className={classes.overlayIcon} />\n          <span className={classes.overlayLabel}>Remove</span>\n        </div>\n      </div>\n    </Paper>\n  );\n}\n\nexport default FavoriteLocationCard;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  favoriteLocationsList: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    listStyle: 'none',\n    padding: 0,\n    margin: theme.spacing(0, -1),\n    flexWrap: 'wrap',\n\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  favoriteLocationsListItem: {\n    flex: '1 0 auto',\n    margin: theme.spacing(0, 1, 2),\n    minWidth: '15%',\n\n    [theme.breakpoints.down('xs')]: {\n      margin: theme.spacing(0, 1, 1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport FavoriteLocationCard from 'components/FavoriteLocationCard/FavoriteLocationCard';\n\nimport useStyles from './FavoriteLocations.styles';\n\nfunction FavoriteLocations() {\n  const classes = useStyles();\n\n  const favoriteLocations = useSelector(\n    state => state.config.favoriteLocations.list\n  );\n\n  const renderFavoriteLocations = () => {\n    return (\n      <ul className={classes.favoriteLocationsList}>\n        {favoriteLocations.map(el => {\n          return (\n            <li key={el} className={classes.favoriteLocationsListItem}>\n              <FavoriteLocationCard locationKey={el} />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return <Fragment>{renderFavoriteLocations()}</Fragment>;\n}\n\nexport default FavoriteLocations;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  pageHeading: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as weatherActions from 'store/weather/actions';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { CommonLayout } from 'layouts/CommonLayout';\nimport { PageErrorBoundary } from 'componentsCommon/PageErrorBoundary';\nimport { FavoriteLocations } from 'components/FavoriteLocations';\n\nimport useStyles from './FavoritesPage.styles';\n\nfunction FavoritesPage() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(weatherActions.getFavsSet());\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <CommonLayout>\n      <Typography variant='h5' component='h1' className={classes.pageHeading}>\n        Favorite locations\n      </Typography>\n\n      <PageErrorBoundary>\n        <FavoriteLocations />\n      </PageErrorBoundary>\n    </CommonLayout>\n  );\n}\n\nexport default FavoritesPage;\n","import React from 'react';\nimport { Redirect, Router, Switch, Route } from 'react-router-dom';\n\nimport history from 'componentsCommon/history';\nimport { ROUTES } from 'constants/routes';\n\nimport { WeatherPage } from 'pages/WeatherPage';\nimport { FavoritesPage } from 'pages/FavoritesPage';\n\nfunction RootRouter() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path={`/${ROUTES.WEATHER}`} exact component={WeatherPage} />\n        <Route path={`/${ROUTES.FAVORITES}`} exact component={FavoritesPage} />\n        <Redirect from='*' to={`/${ROUTES.REDIRECT_URL}`} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default RootRouter;\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { StylesProvider } from '@material-ui/styles';\n\nimport customTheme from 'theme';\nimport { RouterUnit } from 'RouterUnit';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction TopLevelLayout() {\n  return (\n    <StylesProvider>\n      <MuiThemeProvider theme={customTheme}>\n        <CssBaseline />\n        <ToastContainer />\n        <RouterUnit />\n      </MuiThemeProvider>\n    </StylesProvider>\n  );\n}\n\nexport default TopLevelLayout;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { persistor, store } from './store/store';\nimport { TopLevelLayout } from 'layouts/TopLevelLayout';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <TopLevelLayout />\n        </PersistGate>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}